rep(c('a', 'b', 'c'), times=2)
rep(c('a', 'b', 'c'), times=2, each=3)
rep(c('a', 'b', 'c'), times=2, each=c(1,3,1))
rep(c('a', 'b', 'c'), times=2, each=(c(1,3,1)))
rep(c('a', 'b', 'c'), times=2, each=(2,3,1))
rep(c('a', 'b', 'c'), times=2, c(2,3,1))
rep(c('a', 'b', 'c'), length.out=NA, times=2, c(2,3,1))
rep(c('a', 'b', 'c'), length.out=NA, times=2, each=c(2,3,1))
rep(c('a', 'b', 'c'), length.out=2, times=2, each=c(2, 3, 1))
rep(c('a', 'b', 'c'), length.out=20, times=2, each=c(2, 3, 1))
rep(c(1, 2, 3), length.out=20, times=2, each=c(2, 3, 1))
rep(1, 40*(1-.8))
rep(1, 40*(1-.8)+1e-7)
rep(1, 8)
fred <- list(happy = 1:10, name = "squash")
rep(fred, 5)
x <- .leap.seconds[1:3]
rep(x, 2)
rep(as.POSIXlt(x), rep(2, 3))
rep(c(1, 2, 3), length.out=20, rep(2, 3, 1))
rep(c(1, 2, 3), length.out=20, each=c(2, 3, 1))
rep(as.POSIXlt(c(1, 2, 3)), length.out=20, each=c(2, 3, 1))
rep(as.POSIXlt(3), length.out=20, each=c(2, 3, 1))
rep(as.POSIXct(3), length.out=20, each=c(2, 3, 1))
x <- factor(LETTERS[1:4]); names(x) <- letters[1:4]
x
rep(x, 2)
rep(x, each = 2)
rep.int(x, 2)  # no names
rep_len(x, 10)
?as.POSIXlt
?rep.int
rep.int(c(3, 2, 1), 3)
rep(c(3, 2, 1), 3)
rep(c(3, 2, 1), each=3)
rep(c(3, 2, 1), each=(3, 2, 1))
rep(c(3, 2, 1), each=(c(3, 2, 1))
rep(c(3, 2, 1), each=(c(3, 2, 1))
rep(c(3, 2, 1), each=(c(3, 2, 1))
rep(c(3, 2, 1), each=(c(3, 2, 1)))
rep(c(3, 2, 1), each=(c(3, 2, 1)))
rep(c(3, 2, 1), c(3, 2, 1))
rep(c(3, 2, 1), times=3, c(3, 2, 1))
rep(c(3, 2, 1), times=3, length.out= NA, c(3, 2, 1))
rep(c(3, 2, 1), c(3, 2, 1), times=3, length.out= NA)
rep(c(3, 2, 1), c(3, 2, 1), length.out= NA)
rep(rep(c(3, 2, 1), c(3, 2, 1), length.out= NA), 3)
x <- c(1, 2, 3, 4, 5, 6, 7, 8, 9)
x
x[1]
x[4]
x <- c( 2, 3, 4, 5, 6, 7, 8, 9)
x
x[4]
x[1, 3]
x[c(1, 3)]
x[seq(1:9, by=2)]
x[seq(1, 9, by=2)]
x[seq(1, 9, by=3)]
x[seq(1, 9, by=4)]
x[1:10, by=4]
x[1:10, by=2]
x[(1:10, by=2)]
x[(1:10), by=2]
x[seq(1:10, by=2, length.out = 3)]
x[seq(1, 10, by=2, length.out = 3)]
x[seq(1, 10, by=2, length= 3)]
?seq
x[seq(1, 10, length= 3)]
x[seq(1, 10, length= 4)]
> x <- c( 2, 3, 4, 5, 6, 7, 8, 9)
x <- c( 2, 3, 4, 5, 6, 7, 8, 9)
x
x[seq(1, 8, length= 4)]
x[seq(1, 7, length= 4)]
x[seq(1, 7, along.with= 4)]
x[seq(1, 7, length.out = 1)]
x[seq(1, 7, length.out = 2)]
x[seq(1, 7, length.out = 3)]
x[seq(1, 7, length.out = 8)]
x[seq(1, 7, length.out = 7)]
x[seq(1, 7)]
x[seq(1, 8)]
x[seq(1, 5)]
x[1:5]
x[seq(1, 9, by=2)]
x[seq(1, 9, by=1)]
x[seq(1, 8, by=1)]
x[c(T, T, T, T, F, F, T)]
x
x <- x + c(10, 11, 12, 13, 14, 15, 16, 17, 18)
x <- c(x, 10, 11, 12, 13, 14, 15, 16, 17, 18)
x
x <- c( 2, 3, 4, 5, 6, 7, 8, 9)
x <- c(x, 10, 11, 12, 13, 14, 15, 16, 17, 18)
x
even <- seq(2, 18, by=2)
even
x[-even]
even <- seq(1, 18, by=2)
x[-even]
y <- seq(1, 10)
x[-y]
x <- x[-y]
x
x
x[2] <- 20
x
x[2:3] <- c(21, 22)
x
x[c(1, 3, 6)] <- c(10, 11, 12)
x
names(x) <- c('a', 'b', 'c', 'd', 'e', 'f', 'g')
names(x)
names(x) <- c('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h')
names(x)
x['a']
x['g']
x[7]
c(1, 2, 3, 4, 5, 6) + 1
c(1, 2, 3, 4, 5, 6) + c(1, 2, 3)
c(1, 2, 3, 4, 5, 6) + c(1, 2, 3, 4)
c(1, 2, 3, 4, 5, 6) - c(1, 2, 3)
seq(1:30) - c(1, 2, 3)
(1:30) - c(1, 2, 3)
c(1, 2, 3, 4, 5, 6) >= c(2, 3)
c(T, F, T) & c(T)
x
x[x>=12 & x!=18]
?exp
exp(3)
log(3)
x <- exp(3)
x
log(x)
vector <- c(1, 12, 17, 19, 100)
vec_max <- max(vector)
vec_min <- min(vector)
vector_trimmed <- vector[vector<vec_max & vector>vec_min]
mean(vector)
mean(vector_trimmed)
temp <- c(1, 10, NA)
temp
mean(temp)
summary(temp)
mean(temp, na.rm=T)
temp[1] <- 0
temp
mean(temp, na.rm=T)
ls()
x1
x2
x3
x4
x <- x4
x4
x
ls()
x4 <- x
x
ls()
rm(list(ls()))
rm(list=ls())
x <- c('a', 'b', 'c', 'd', 'e', 'f')
x
list(x)
is.list(x)
list=x
x
rm(list)
lst <- list(x)
lst
y <- c(1, 2, 3, 4, 5, 6)
y
?cbind
lst <- rbind(x, y)
lst
view(lst)
library(rio)
view(lst)
lst[1]
lst[7]
lst2 <- cbind(x, y)
lst2
lst2[2,5]
lst2[2,1]
lst2[5,1]
type(lst2)
class(lst2)
wd()
dr()
getwd()
dir.create("testdir1")
getwd()
setwd("testdir1")
getwd()
rm("testdir1")
setwd("Users/victorialowery/")
setwd("Users/victorialowery")
setwd("/Users/victorialowery")
getwd()
list.files()
rm("testdir1")
file.remove(testdir1)
file.remove("testdir1")
list.files()
?lm
rep(1:10, 2)
rep(c(1, 2, 4, 5, 7), 2)
rep(c(1, 2, 4, 5, 7), c(2, 2, 2, 2, 6))
rep(c(1, 2, 4, 5, 7), c(2, 2, 2, 2, 6), times=3)
rep(c(1, 2, 4, 5, 7), each=c(2, 2, 2, 2, 6), times=3)
rep(rep(c(1, 2, 4, 5, 7), c(2, 2, 2, 2, 6)), 2)
foo <- rep(rep(c(1, 2, 4, 5, 7), c(2, 2, 2, 2, 6)), 2)
foo[1, 3]
foo[c(1, 3)]
foo[1:10]
foo[range(1, 10)
]
foo[range(1, 10)]
foo[range(1:10)]
?range
range(1:100)
foo[seq(1:100)]
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
require(graphics)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D90 <- lm(weight ~ group - 1) # omitting intercept
anova(lm.D9)
summary(lm.D90)
opar <- par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))
plot(lm.D9, las = 1)      # Residuals, Fitted, ...
par(opar)
rm(list=ls())
x <- "Hello I am"
y <- "Tori"
c(x, y)
x+y
y <- 'Tori'
c(x, y)
cat(x, y)
?cat
print(x)
cat(x)
cat(paste(letters, 100* 1:26), fill = TRUE, labels = paste0("{", 1:10, "}:"))
cat(paste(letters, 100* 1:26), fill = F, labels = paste0("{", 1:10, "}:"))
cat(paste(letters, 100* 1:26), fill = T, labels = paste0("{", 1:10, "}:"))
cat(paste(letters, 100* 1:26), fill = T, labels = paste0("[", 1:10, "}:"))
cat(paste(letters, 100* 1:26), fill = T, labels = paste("[", 1:10, "}:"))
cat(paste(letters, 100* 1:26), fill = T, labels = paste("{", 1:10, "}:"))
cat(paste(letters, 100* 1:26), fill = T, labels = paste0("{", 1:10, "}:"))
cat(paste(letters, 100* 1:26), fill = T, labels = paste1("{", 1:10, "}:"))
0
cat(paste(letters, 100* 1:26), fill = T, labels = paste0("{", 1:10, "}:"))
cat(x + y)
cat(x, y)
5/2
(5/2)
5%/%2
8%/%2
9%/%2
3*(5%/%2)
-3*(5%/%2)
(-3)*(5%/%2)
(-3)**(5%/%2)
-3**(5%/%2)
5%%2
(-3)**(5/2)
(3)**(5/2)
x <- '8'
type(x)
class(x)
x+1
as.numeric(x)+1
x <- as.numeric(x)
x=x+1
x=x+1
x_1 <-  rnorm(5)
x_2 <- sample(1:10)
x_2 <- 1:10
x_2
x_1
?sample
x_3 <- x_2[c(1:5)]
x_3 <- x_2[1:6]
x_3 <- x_2[1:5]
my_sum <- x_1 + x_3
x_1
x_3
my_sum
x_1[3]*x_1[1]
x_1 + c(1,2)
x_1[1:4] + c(1,2)
my_mat = matrix(1:12, 4, 3)
my_mat2 = matrix(1:20, 4, 3)
my_mat2
my_mat2 = matrix(1:20, nrow=5)
my_mat2
my_mat2 = matrix(1:20, nrow=5, byrow=F)
my_mat2
my_mat2 = matrix(1:20, nrow=5, byrow=T)
my_mat2
v <- 1:12
dim(v) <- c(3, 4)
v <- 1:12
dim(v) <- c(3, 4)
v
vector1 <- 1:4
vector2 <- 5:8
vector3 <- 9:12
rbind(vector1, vector2, vector3)
m1 <- rbind(vector1, vector2, vector3)
m1
m2 <- cbind(vector1, vector2, vector3)
m2
vector3 <- 9:11
m1 <- rbind(vector1, vector2, vector3)
m1
m1
m1 +1
m1
m1 +1 -m1
(m1 +1) -m1
install.packages(ggplot2)
install.packages("ggplot2")
ls()
pwd
getwd()
rm(list=ls())
x <- "Hello, I am"
y <- "Tori"
cat(x, y)
5/2
5 %/% 2
3^5 %/% 2
3^(5 %/% 2)
-3(5 / 2)
(-3)(5 / 2)
(-3)(5/2)
(-3)^(5/2)
(-3)^(5 %/% 2)
'2' == 1
'2' == 2
'a' == 2
'a' == 1
'a' == 'A'
'a' > 'A'
'a' < 'A'
x + 1
x = '8'
x + 1
x = as.numeric(x)
x = x + 1
x
x += 1
foo <- c(2, 3, 4, 5, 't')
class(foo)
x_1 <- rnorm(5)
x_2 <- seq(1, 10)
x_3 <- x_2[:5]
x_3 <- x_2[1:5]
my_sum <- x_1 + x_3
shiny::runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
ingred_badata_df %>% filter(grepl(input$ingred_choice, ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally()
ingred_badata_df %>% filter(grepl(input$ingred_choice, ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally()
ingred_badata_df %>% filter(grepl("lemon", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally()
og_bonapp_df %>% group_by(., Year = format(published, "%Y")) %>% tally()
og_bonapp_df %>% group_by(., Year = format(Published, "%Y")) %>% tally()
og_bonapp_df %>% group_by(., Year = format(Published, "%Y")) %>% tally() %>% head(6)
year_recipe_totals <- og_bonapp_df %>% group_by(., Year = format(Published, "%Y")) %>% tally() %>% head(6)
ingred_badata_df %>% filter(grepl("lemon", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., n/year_recipe_totals$n)
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
ingred_badata_df %>% filter(grepl("tofu", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("tofu", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("beans", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("black beans", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("pinto beans", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("navy beans", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("maple syrup", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("red wine", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("cheddar", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("lettuce", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("alfalfa sprouts", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("sprouts", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("alfalfa", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("cumin", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("rosemarry", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("rosemary", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
ingred_badata_df %>% filter(grepl("sage", ingred)) %>%
group_by(., Year = format(published, "%Y")) %>% tally() %>% mutate(., Ratio = n/year_recipe_totals$n)  %>%
ggplot(aes(x = Year, y=Ratio)) + geom_bar(aes(fill = n), stat="identity") +
scale_fill_gradientn(colors = brewer.pal(n=10, name = "Spectral"))
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp()
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
og_bonapp_df %>% group_by(Reviews)
og_bonapp_df %>% group_by(Reviews)
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
og_bonapp_df %>% group_by(Reviews) %>% arrange()
og_bonapp_df %>% group_by(Reviews) %>% arrange(Reviews)
og_bonapp_df %>% group_by(Reviews) %>% arrange(desc(Reviews))
og_bonapp_df %>% group_by(Reviews) %>% arrange(desc(Reviews)) %>% head(6)
most_reviewed_dish$DishTitle[1]
#####
most_reviewed_dish <- og_bonapp_df %>% group_by(Reviews) %>% arrange(desc(Reviews)) %>% head(6)
most_reviewed_dish$DishTitle[1]
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp()
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp()
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp()
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp()
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp()
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp()
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp()
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
#####
top_reviewed_dish <- og_bonapp_df %>% group_by(Reviews) %>% arrange(desc(Reviews)) %>% head(6)
#####
top_reviewed_dish <- og_bonapp_df %>% group_by(Reviews) %>% arrange(desc(Reviews)) %>% head(6)
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
top_reviewed_dish
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
og_bonapp_df %>% group_by(Rating) %>% arrange(desc(Rating)) %>% head(6)
og_bonapp_df %>% group_by(Rating) %>% arrange(desc(Rating)) %>% head(20)
og_bonapp_df %>% group_by(Rating) %>% arrange(desc(Rating)) select(DishTitle, Published, Rating, Reviews) %>% head(20)
og_bonapp_df %>% group_by(Rating) %>% arrange(desc(Rating)) %>% select(DishTitle, Published, Rating, Reviews) %>% head(20)
og_bonapp_df %>% group_by(Rating) %>% arrange(desc(Rating)) %>% select(DishTitle, Published, Rating, Reviews) %>% arrange(desc(Reviews)) %>% head(20)
og_bonapp_df %>% group_by(Rating) %>% arrange(desc(Rating)) %>% select(DishTitle, Published, Rating, Reviews) %>% arrange(desc(Rating), desc(Reviews)) %>% head(20)
most_reviewed_dish$DishTitle[3]
top_reviewed_dish[3]
View(most_reviewed_dish)
runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
shiny::runApp('Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App')
setwd("~/Documents/NYCDSA_Work/Web_Scraping/Scrapy/second_attempt/bonapp/Bon_App")
runApp()
runApp()
